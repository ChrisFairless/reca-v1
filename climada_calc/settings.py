"""
Django settings for climada_calc project.

Generated by 'django-admin startproject' using Django 3.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import dj_database_url
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True
DEBUG = os.environ.get('DEBUG', '') != 'False'

ALLOWED_HOSTS = []
ALLOWED_HOSTS.extend(filter(None, os.environ.get('ALLOWED_HOSTS', '').split(',')))

# Application definition

INSTALLED_APPS = [
    'whitenoise.runserver_nostatic',
    'calc_api.apps.CalcApiConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ninja',
    'corsheaders'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'climada_calc.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'climada_calc.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases
ASGI_THREADS = 18  # Heroku postgres free tier allows 20 connections

# Construct database location from environment variables
db_address = os.environ.get('DATABASE_URL')
if not db_address:
    db_address = 'postgres://' + \
                 os.environ.get('POSTGRES_USER') + ':' + os.environ.get('POSTGRES_PASSWORD') + \
                 '@' + os.environ.get('POSTGRES_HOST') + ':' + os.environ.get('POSTGRES_PORT') + \
                 '/' + os.environ.get('POSTGRES_DB')
# https://pypi.org/project/django-database-url/
DATABASES = {
    "default": dj_database_url.config(default=db_address)
}
DATABASES['default']['ENGINE'] = "django.db.backends.postgresql_psycopg2"


# Cache
# https://docs.djangoproject.com/en/4.0/topics/cache/
# TODO optimise settings for Redis (see above url)
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
    }
    # 'default': {
    #     'BACKEND': 'django.core.cache.backends.redis.RedisCache',
    #     'LOCATION': os.environ.get('REDIS_URL'),
    #     'TIMEOUT': 60 * 24
    # }
}


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

MEDIA_ROOT = BASE_DIR / "media"
MEDIA_URL = "/media/"


# Geocoding
GEOCODE_URL = os.environ.get('GEOCODE_URL')
# If deploying your own version a free Maptiler account gives a key for 100k requests/month. This is locked to our site.
MAPTILER_KEY = os.environ.get('MAPTILER_KEY')

# CORS
CORS_ALLOW_ALL_ORIGINS = True
